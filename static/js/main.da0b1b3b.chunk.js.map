{"version":3,"sources":["pages/styles/index.tsx","pages/HomePage.tsx","router/config.tsx","pages/ProjectsPage.tsx","pages/SnippetsPage.tsx","pages/NotebooksPage.tsx","pages/PageNotFound.tsx","router/index.tsx","components/ChooseLanguage.tsx","components/Nav.tsx","App.tsx","i18n.ts","index.tsx"],"names":["PurpleTitle","styled","Typography","Title","HomePage","t","useTranslation","className","level","routesConfig","id","component","path","title","exact","projectData","description","gutter","map","span","size","bordered","snippetData","notebookData","PageNotFound","justify","message","type","Routes","location","useLocation","React","currentRoute","find","route","pathname","document","ChooseLanguage","i18n","isVisible","setIsVisible","content","Group","code","languageName","onClick","language","localStorage","setItem","changeLanguage","disabled","trigger","placement","visible","onVisibleChange","icon","GlobalOutlined","shape","NavAvatar","Avatar","SpacedText","props","letterSpacing","distance","Nav","to","toUpperCase","App","getItem","basename","process","style","minHeight","Content","use","initReactI18next","init","lng","fallbackLng","debug","interpolation","escapeValue","resources","en","translation","fr","bg","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.da0b1b3b.chunk.js","sourcesContent":["import { Typography } from 'antd';\nimport styled from '@emotion/styled';\n\nconst PurpleTitle = styled(Typography.Title)`\n  color: #993366 !important;\n  font-weight: 600 !important;\n`;\n\nexport default PurpleTitle;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { Row } from 'antd';\nimport PurpleTitle from './styles';\n\nconst HomePage: React.FC<RouteComponentProps> = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"container\">\n      <Row className=\"mt-4\">\n        <PurpleTitle level={2}>{t('Home Page')}</PurpleTitle>\n      </Row>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import HomePage from '../pages/HomePage';\nimport ProjectsPage from '../pages/ProjectsPage';\nimport SnippetsPage from '../pages/SnippetsPage';\nimport NotebooksPage from '../pages/NotebooksPage';\nimport { IRouteProps } from './types';\n\nconst routesConfig: IRouteProps[] = [\n  // Public\n  { id: 1, component: HomePage, path: '/', title: 'Home', exact: true },\n  { id: 2, component: ProjectsPage, path: '/projects', title: 'Projects', exact: true },\n  { id: 3, component: SnippetsPage, path: '/snippets', title: 'Snippets', exact: true },\n  { id: 4, component: NotebooksPage, path: '/notebooks', title: 'Snippets', exact: true },\n];\n\nexport default routesConfig;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Row, Col, Card } from 'antd';\nimport PurpleTitle from './styles';\n\nconst ProjectsPage: React.FC<RouteComponentProps> = () => {\n  const { t } = useTranslation();\n\n  const projectData = [\n    {\n      id: 1,\n      title: t('Flashcard-Project-Title'),\n      description: t('Flashcard-Project-Description'),\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <Row className=\"mt-4\">\n        <PurpleTitle level={2}>{t('Projects')}</PurpleTitle>\n      </Row>\n      <Row className=\"mt-4\" gutter={[24, 24]}>\n        {projectData.map(({ id, title, description }) => (\n          <Col span={8} key={`projects-col-${id}`}>\n            <Card size=\"small\" bordered={false} title={title}>\n              <p className=\"text-muted\">{description}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { Row, Card, Col } from 'antd';\nimport PurpleTitle from './styles';\n\nconst SnippetsPage: React.FC<RouteComponentProps> = () => {\n  const { t } = useTranslation();\n\n  const snippetData = [\n    {\n      id: 1,\n      title: t('Json-Snippet-Title'),\n      description: t('Json-Snippet-Description'),\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <Row className=\"mt-4\">\n        <PurpleTitle level={2}>{t('Snippets')}</PurpleTitle>\n      </Row>\n      <Row className=\"mt-4\" gutter={[24, 24]}>\n        {snippetData.map(({ id, title, description }) => (\n          <Col span={8} key={`snippet-col-${id}`}>\n            <Card size=\"small\" bordered={false} title={title}>\n              <p className=\"text-muted\">{description}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default SnippetsPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Row, Col, Card } from 'antd';\nimport PurpleTitle from './styles';\n\nconst NotebooksPage: React.FC<RouteComponentProps> = () => {\n  const { t } = useTranslation();\n\n  const notebookData = [\n    {\n      id: 1,\n      title: t('Flashcard-Notebook-Title'),\n      description: t('Flashcard-Notebook-Description'),\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <Row className=\"mt-4\">\n        <PurpleTitle level={2}>{t('Notebooks')}</PurpleTitle>\n      </Row>\n      <Row className=\"mt-4\" gutter={[24, 24]}>\n        {notebookData.map(({ id, title, description }) => (\n          <Col span={8} key={`projects-col-${id}`}>\n            <Card size=\"small\" bordered={false} title={title}>\n              <p className=\"text-muted\">{description}</p>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default NotebooksPage;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport { Alert, Row } from 'antd';\n\nconst PageNotFound: React.FC<RouteComponentProps> = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"container\">\n      <Row justify=\"center\" className=\"mt-4\">\n        <Alert message={t('page_not_found')} type=\"warning\" />\n      </Row>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import * as React from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport routesConfig from './config';\nimport PageNotFound from '../pages/PageNotFound';\n\nconst Routes: React.FC = () => {\n  const location = useLocation();\n\n  React.useEffect(() => {\n    const currentRoute = routesConfig.find((route) => route.path === location.pathname);\n\n    if (currentRoute) {\n      document.title = currentRoute.title;\n    }\n  }, [location]);\n\n  return (\n    <Switch>\n      {routesConfig.map(({ path, component, exact }) => (\n        <Route key={path} path={path} exact={exact} component={component} />\n      ))}\n      <Route component={PageNotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import * as React from 'react';\nimport { GlobalOutlined } from '@ant-design/icons';\nimport { Popover, Button } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst ChooseLanguage: React.FC = () => {\n  const { i18n } = useTranslation();\n  const [isVisible, setIsVisible] = React.useState<boolean>(false);\n\n  const handleLanguageChange = (language: string) => {\n    localStorage.setItem('default-language', language);\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <Popover\n      content={\n        <Button.Group>\n          {[\n            { code: 'en', languageName: 'English' },\n            { code: 'fr', languageName: 'Français' },\n            { code: 'bg', languageName: 'Български' },\n          ].map(({ code, languageName }) => (\n            <Button key={code} onClick={() => handleLanguageChange(code)} disabled={i18n.language === code}>\n              {languageName}\n            </Button>\n          ))}\n        </Button.Group>\n      }\n      trigger=\"click\"\n      placement=\"bottom\"\n      visible={isVisible}\n      onVisibleChange={setIsVisible}\n    >\n      <Button icon={<GlobalOutlined />} shape=\"circle\" type=\"link\" size=\"large\" className=\"nav-link\" />\n    </Popover>\n  );\n};\n\nexport default ChooseLanguage;\n","import styled from '@emotion/styled';\nimport { Avatar } from 'antd';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport ChooseLanguage from './ChooseLanguage';\n\nconst NavAvatar = styled(Avatar)`\n  background-color: #993366;\n`;\n\nconst SpacedText = styled.span<{ distance: number }>((props) => ({\n  letterSpacing: `${props.distance}px`,\n}));\n\nconst Nav: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <ul className=\"navbar-nav d-flex flex-row me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <NavAvatar>{t('MP')}</NavAvatar>\n          </li>\n          <li className=\"nav-item mx-1\">\n            <Link to=\"/\" className=\"nav-link text-light font-weight-bold h5 m-0\">\n              <SpacedText distance={2}>{t('portfolio').toUpperCase()}</SpacedText>\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav d-flex flex-row me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item mx-2\">\n            <Link to=\"/projects\" className=\"nav-link font-weight-bold\">\n              {t('Projects')}\n            </Link>\n          </li>\n          <li className=\"nav-item mx-2\">\n            <Link to=\"/snippets\" className=\"nav-link font-weight-bold\">\n              {t('Snippets')}\n            </Link>\n          </li>\n          <li className=\"nav-item mx-2\">\n            <Link to=\"/notebooks\" className=\"nav-link font-weight-bold\">\n              {t('Notebooks')}\n            </Link>\n          </li>\n          <li className=\"nav-item mx-2 text-light\">\n            <ChooseLanguage />\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './router';\nimport Nav from './components/Nav';\n\nconst App: React.FC = () => {\n  const { i18n } = useTranslation();\n  const language = localStorage.getItem('default-language');\n\n  React.useEffect(() => {\n    i18n.changeLanguage(language || 'en');\n  }, [language, i18n]);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Nav />\n        <Layout.Content>\n          <Routes />\n        </Layout.Content>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport en from './locales/en/translation.json';\nimport fr from './locales/fr/translation.json';\nimport bg from './locales/bg/translation.json';\n\ni18n.use(initReactI18next).init({\n  lng: 'en',\n  fallbackLng: 'en',\n  debug: process.env.NODE_ENV === 'development',\n  interpolation: {\n    escapeValue: false, // react escapes by default\n  },\n  resources: {\n    en: {\n      translation: en,\n    },\n    fr: {\n      translation: fr,\n    },\n    bg: {\n      translation: bg,\n    },\n  },\n});\n\nexport default i18n;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}